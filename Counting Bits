//Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

 

//Example 1:

//Input: n = 2
//Output: [0,1,1]
//Explanation:
//0 --> 0
//1 --> 1
//2 --> 10
//Example 2:

//Input: n = 5
//Output: [0,1,1,2,1,2]
//Explanation:
//0 --> 0
//1 --> 1
//2 --> 10
//3 --> 11
//4 --> 100
//5 --> 101





//code

class Solution {
public:
    vector<int> countBits(int n) {
        if(n==0) return {0};
        vector<int>dp(n+1,0);
        dp[0]=0;
        dp[1]=1;
        int prev=1;
        for(int i = 2 ; i <=n ; i++)
        {
            if((i&(i-1))==0)
            {
                dp[i]=1;
                prev=i;
            }
            else
            {
                dp[i]=dp[prev]+dp[i-prev];
            }
        }
        return dp;
    }
};
